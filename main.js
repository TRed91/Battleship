(()=>{var e={208:(e,n,t)=>{"use strict";t.d(n,{A:()=>s});var r=t(354),o=t.n(r),a=t(314),i=t.n(a)()(o());i.push([e.id,'* {\n    box-sizing: border-box;\n    font-family: Arial, Helvetica, sans-serif;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    position: relative;\n    width: 100vw;\n    align-items: center;\n    padding-top: 50px;\n}\n\n.game-field {\n    border: 2px solid black;\n    display: flex;\n    justify-content: space-around;\n    padding: 10px;\n    gap: 30px;\n    min-width: 670px;\n    border-radius: 10px;\n    box-shadow: 0px 0px 5px black;\n    background-color: #b7cff2;\n}\n\n.field, .ship {\n    height: 30px;\n    width: 30px;\n    border: 1px solid black;\n    background-color: #e1e1e1;\n}\n\n.p1-ship {\n    background-color: rgb(62, 77, 77);\n}\n\n/* .p2-ship {\n    background-color: red;\n} */\n\n.board {\n    display: flex;\n    flex-direction: column;\n}\n\n.board > div {\n    display: flex;\n}\n\ndiv [hit = "true"] {\n    background-color: rgb(59, 129, 157);\n}\n\ndiv [class~="ship"][hit = "true"]{\n    background-color: rgb(221, 100, 44);\n}\n\n.winner-box {\n    position: absolute;\n\n    width: 400px;\n    margin-top: 100px;\n    \n    display: flex;\n    flex-direction: column;\n    padding: 50px;\n    gap: 30px;\n\n    border: 2px solid black;\n    border-radius: 10px;\n    box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.337);\n\n    background-color: #b7cff2;\n\n    text-align: center;\n}\n\n.winner-text {\n    text-shadow: 0px 0px 3px #00000031;\n}\n\n.winner-btn {\n    color: #b7cff2;\n    background-color: #1b232e;\n}\n\nbutton {    \n    padding: 5px 15px;\n    font-size: 20px;\n    border: 1px solid rgba(0, 0, 0, 0.312);\n    border-radius: 5px;\n    box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.169);\n    margin-left: 20px;\n    background-color: #b7cff2;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,yCAAyC;AAC7C;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,kBAAkB;IAClB,YAAY;IACZ,mBAAmB;IACnB,iBAAiB;AACrB;;AAEA;IACI,uBAAuB;IACvB,aAAa;IACb,6BAA6B;IAC7B,aAAa;IACb,SAAS;IACT,gBAAgB;IAChB,mBAAmB;IACnB,6BAA6B;IAC7B,yBAAyB;AAC7B;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,uBAAuB;IACvB,yBAAyB;AAC7B;;AAEA;IACI,iCAAiC;AACrC;;AAEA;;GAEG;;AAEH;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,mCAAmC;AACvC;;AAEA;IACI,mCAAmC;AACvC;;AAEA;IACI,kBAAkB;;IAElB,YAAY;IACZ,iBAAiB;;IAEjB,aAAa;IACb,sBAAsB;IACtB,aAAa;IACb,SAAS;;IAET,uBAAuB;IACvB,mBAAmB;IACnB,4CAA4C;;IAE5C,yBAAyB;;IAEzB,kBAAkB;AACtB;;AAEA;IACI,kCAAkC;AACtC;;AAEA;IACI,cAAc;IACd,yBAAyB;AAC7B;;AAEA;IACI,iBAAiB;IACjB,eAAe;IACf,sCAAsC;IACtC,kBAAkB;IAClB,4CAA4C;IAC5C,iBAAiB;IACjB,yBAAyB;AAC7B",sourcesContent:['* {\n    box-sizing: border-box;\n    font-family: Arial, Helvetica, sans-serif;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    position: relative;\n    width: 100vw;\n    align-items: center;\n    padding-top: 50px;\n}\n\n.game-field {\n    border: 2px solid black;\n    display: flex;\n    justify-content: space-around;\n    padding: 10px;\n    gap: 30px;\n    min-width: 670px;\n    border-radius: 10px;\n    box-shadow: 0px 0px 5px black;\n    background-color: #b7cff2;\n}\n\n.field, .ship {\n    height: 30px;\n    width: 30px;\n    border: 1px solid black;\n    background-color: #e1e1e1;\n}\n\n.p1-ship {\n    background-color: rgb(62, 77, 77);\n}\n\n/* .p2-ship {\n    background-color: red;\n} */\n\n.board {\n    display: flex;\n    flex-direction: column;\n}\n\n.board > div {\n    display: flex;\n}\n\ndiv [hit = "true"] {\n    background-color: rgb(59, 129, 157);\n}\n\ndiv [class~="ship"][hit = "true"]{\n    background-color: rgb(221, 100, 44);\n}\n\n.winner-box {\n    position: absolute;\n\n    width: 400px;\n    margin-top: 100px;\n    \n    display: flex;\n    flex-direction: column;\n    padding: 50px;\n    gap: 30px;\n\n    border: 2px solid black;\n    border-radius: 10px;\n    box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.337);\n\n    background-color: #b7cff2;\n\n    text-align: center;\n}\n\n.winner-text {\n    text-shadow: 0px 0px 3px #00000031;\n}\n\n.winner-btn {\n    color: #b7cff2;\n    background-color: #1b232e;\n}\n\nbutton {    \n    padding: 5px 15px;\n    font-size: 20px;\n    border: 1px solid rgba(0, 0, 0, 0.312);\n    border-radius: 5px;\n    box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.169);\n    margin-left: 20px;\n    background-color: #b7cff2;\n}'],sourceRoot:""}]);const s=i},314:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},354:e=>{"use strict";e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},72:e=>{"use strict";var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},i=[],s=0;s<e.length;s++){var c=e[s],d=r.base?c[0]+r.base:c[0],l=a[d]||0,p="".concat(d," ").concat(l);a[d]=l+1;var A=t(p),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==A)n[A].references++,n[A].updater(u);else{var h=o(u,r);r.byIndex=s,n.splice(s,0,{identifier:p,updater:h,references:1})}i.push(p)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var s=t(a[i]);n[s].references--}for(var c=r(e,o),d=0;d<a.length;d++){var l=t(a[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=c}}},659:e=>{"use strict";var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:e=>{"use strict";e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{"use strict";e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{"use strict";e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},361:(e,n,t)=>{const r=t(89);class o{constructor(e,n){this.coords=[e,n]}isField=!0;gotHit=!1;receivedHit(){this.gotHit=!0}}class a{constructor(){this.board=a.generateBoard()}static generateBoard(){let e=[];for(let n=0;n<10;n++){let t=[];for(let e=0;e<10;e++)t.push(new o(n,e));e.push(t)}return e}placeShips(e){let n=!1;for(;!n;){const t=new r(e,null);let o="";o=0===Math.floor(2*Math.random())?"vertical":"horizontal";let a=Math.floor(10*Math.random()),i=Math.floor(10*Math.random());t.coords=[[a,i]];for(let e=1;e<t.length;e++)"horizontal"===o?t.coords.push([a+e,i]):t.coords.push([a,i+e]);let s=!1;t.coords.forEach((e=>{e[0]<=9&&e[1]<=9&&this.board[e[0]][e[1]].hasOwnProperty("isField")||(s=!0)})),s||("horizontal"===o&&(t.coords.forEach((e=>{this.board[e[0]][e[1]]=t})),n=!0),"vertical"===o&&(t.coords.forEach((e=>{this.board[e[0]][e[1]]=t})),n=!0))}}receiveAttack(e,n){const t=this.board[e][n];if(t.hasOwnProperty("isField")?t.receivedHit():(t.hit(),t.isSunk()),0===this.getShipList().filter((e=>!e.sunk)).length)return"Game Over"}getShipList(){const e=[];for(const n of this.board)for(const t of n)t.hasOwnProperty("isField")||e.push(t);return e}}const i=new a;i.placeShips(3),i.receiveAttack(2,2),e.exports=a},138:(e,n,t)=>{const r=t(361);e.exports=class{constructor(){this.gameboard=new r}}},89:e=>{e.exports=class{constructor(e,n){this.length=e,this.coords=n}hits=0;sunk=!1;hit(){this.hits+=1}isSunk(){this.hits===this.length&&(this.sunk=!0)}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{"use strict";var e=t(72),n=t.n(e),r=t(825),o=t.n(r),a=t(659),i=t.n(a),s=t(56),c=t.n(s),d=t(540),l=t.n(d),p=t(113),A=t.n(p),u=t(208),h={};h.styleTagTransform=A(),h.setAttributes=c(),h.insert=i().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=l(),n()(u.A,h),u.A&&u.A.locals&&u.A.locals;const f=t(138);let b=new f,m=new f,g=!1;const x=document.querySelector("body"),C=document.createElement("div"),v=document.createElement("button"),B=document.createElement("button");v.innerHTML="New Random Board",B.innerHTML="Start Game";const I=document.createElement("div");I.className="game-field";const y=document.createElement("div");y.className="p1-board board";const w=document.createElement("div");w.className="p2-board board",x.appendChild(C),x.appendChild(I),C.appendChild(v),C.appendChild(B),I.appendChild(y),I.appendChild(w);const k=[],S=[];function E(){b=new f,b.gameboard.placeShips(2),b.gameboard.placeShips(2),b.gameboard.placeShips(2),b.gameboard.placeShips(2),b.gameboard.placeShips(3),b.gameboard.placeShips(3),b.gameboard.placeShips(3),b.gameboard.placeShips(4),b.gameboard.placeShips(4),b.gameboard.placeShips(5),m=new f,m.gameboard.placeShips(2),m.gameboard.placeShips(2),m.gameboard.placeShips(2),m.gameboard.placeShips(2),m.gameboard.placeShips(3),m.gameboard.placeShips(3),m.gameboard.placeShips(3),m.gameboard.placeShips(4),m.gameboard.placeShips(4),m.gameboard.placeShips(5)}function M(e){const n=e.gameboard.getShipList().reduce(((e,n)=>e.concat(n.coords)),[]);return Array.from(new Set(n.map(JSON.stringify)),JSON.parse).map((e=>`${e[0]}${e[1]}`))}function N(){for(;y.firstChild;)y.removeChild(y.firstChild);for(;w.firstChild;)w.removeChild(w.firstChild);for(let e=0;e<10;e++){const n=document.createElement("div"),t=document.createElement("div");for(let r=0;r<10;r++){const o=`${e}${r}`,a=document.createElement("div");M(b).includes(o)?a.className=`ship p1-ship c-${e}${r} p1-field`:a.className=`field p1-field c-${e}${r}`,a.setAttribute("hit","false"),n.appendChild(a),k.push(a);const i=document.createElement("div");M(m).includes(o)?i.className=`ship p2-ship c-${e}${r} p2-field`:i.className=`field p2-field c-${e}${r}`,i.setAttribute("hit","false"),t.appendChild(i),S.push(i)}y.appendChild(n),w.appendChild(t)}}function T(e){g=!0;const n=document.createElement("div");n.className="winner-box";const t=document.createElement("h3");t.className="winner-text";const r=document.createElement("button");r.className="winner-button",t.innerHTML=`Game Over</br>${e} won the game!`,r.innerHTML="New Game",r.className="winner-btn",n.appendChild(t),n.appendChild(r),x.appendChild(n),r.addEventListener("click",(()=>{B.disabled=!1,v.disabled=!1,E(),N(),x.removeChild(x.lastChild),g=!1}))}B.addEventListener("click",(function(){B.disabled=!0,v.disabled=!0,document.querySelectorAll(".p2-field").forEach((e=>{e.addEventListener("click",(()=>{if(!g){const n=e.getAttribute("class").split(" ")[2].split(""),t=parseInt(n[n.length-2]),r=parseInt(n[n.length-1]),o=m.gameboard.receiveAttack(t,r);e.setAttribute("hit","true"),"Game Over"===o?T("Player One"):function(){let e,n=!0,t=0,r=0;for(;n;){t=Math.floor(10*Math.random()),r=Math.floor(10*Math.random());const o=`c-${t}${r}`;e=document.querySelector(".p1-field."+o),"false"===e.getAttribute("hit")&&(n=!1)}e.setAttribute("hit","true"),"Game Over"===b.gameboard.receiveAttack(t,r)&&T("Player Two")}()}}))}))})),v.addEventListener("click",(()=>{E(),N()})),E(),N()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,